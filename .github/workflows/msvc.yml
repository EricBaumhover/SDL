name: Build (MSVC)

on: [push, pull_request]

jobs:
  Build:
    name: ${{ matrix.platform.name }}
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows (x64),          id: winx64, flags: -A x64,   project: VisualC/SDL.sln, projectflags: '/p:Platform=x64' }
        - { name: Windows (x86),          id: winx86, flags: -A Win32, project: VisualC/SDL.sln, projectflags: '/p:Platform=Win32' }
        - { name: Windows static VCRT (x64), id: winx64vcrt, flags: -A x64 -DSDL_FORCE_STATIC_VCRT=ON }
        - { name: Windows static VCRT (x86), id: winx86vcrt, flags: -A Win32 -DSDL_FORCE_STATIC_VCRT=ON }
        - { name: Windows (clang-cl x64), id: winx64clang, flags: -T ClangCL -A x64 }
        - { name: Windows (clang-cl x86), id: winx86clang, flags: -T ClangCL -A Win32 }
        - { name: Windows (ARM),          id: winarm, flags: -A ARM }
        - { name: Windows (ARM64),        id: winarm64, flags: -A ARM64 }
        - { name: UWP (x64),              id: win64uwp, flags: -A x64 -DCMAKE_SYSTEM_NAME=WindowsStore -DCMAKE_SYSTEM_VERSION="10.0" -DSDL_TESTS=OFF, nowerror: true,
            project: VisualC-WinRT/SDL-UWP.sln, projectflags: '/p:Platform=x64 /p:WindowsTargetPlatformVersion=10.0.17763.0' }

    steps:
    - uses: actions/checkout@v3
    - name: Create CMake project using SDL as a subproject
      shell: python
      run: |
        import os
        import textwrap
        srcdir = r"${{ github.workspace }}".replace("\\", "/")
        builddir = f"{ srcdir }/build"
        os.makedirs(builddir)
        with open(f"{ builddir }/CMakeLists.txt", "w") as f:
          f.write(textwrap.dedent(f"""\
            cmake_minimum_required(VERSION 3.0)
            project(sdl_user)
            add_subdirectory("{ srcdir }" SDL)
          """))
    - name: Configure (CMake)
      run: cmake -S build -B build `
        -DSDL_WERROR=${{ !matrix.platform.nowerror }} `
        -DSDL_TESTS=ON `
        -DSDL_INSTALL_TESTS=ON `
        -DSDL_VENDOR_INFO="Github Workflow" `
        -DSDL2_DISABLE_INSTALL=OFF `
        ${{ matrix.platform.flags }} `
        -DCMAKE_INSTALL_PREFIX=prefix
    - name: Build (CMake)
      run: cmake --build build/ --config Release --parallel
    - name: Run build-time tests
      if: "! contains(matrix.platform.name, 'ARM')"
      run: |
        $env:SDL_TESTS_QUICK=1
        ctest -VV --test-dir build/ -C Release
    - name: Install (CMake)
      run: |
        echo "SDL2_DIR=$Env:GITHUB_WORKSPACE/prefix" >> $Env:GITHUB_ENV
        cmake --install build/
    - name: Verify CMake configuration files
      if: ${{ !contains(matrix.platform.name, 'UWP') }}  # FIXME: cmake/test/CMakeLists.txt should support UWP
      run: |
        cmake -S cmake/test -B cmake_config_build `
          -DCMAKE_PREFIX_PATH=${{ env.SDL2_DIR }} `
          ${{ matrix.platform.flags }}
        cmake --build cmake_config_build --config Release

    - name: Add msbuild to PATH
      if: ${{ matrix.platform.project != '' }}
      uses: microsoft/setup-msbuild@v1.1.3
    - name: Build msbuild
      if: ${{ matrix.platform.project != '' }}
      run: msbuild ${{ matrix.platform.project }} /m /p:BuildInParallel=true /p:Configuration=Release ${{ matrix.platform.projectflags }}
    - name: Check artifacts x64
      uses: andstor/file-existence-action@v1
      with:
        files: "VisualC\x64/Release/SDL2.dll, VisualC\x64/Release/SDL2.lib, VisualC\x64/Release/SDL2.pdb"
        allow_failure: true
    - name: Gather artifacts
      run: |
        md artifacts
        md artifacts\x86
        md artifacts\x64
        md artifacts\include
        Copy-Item "VisualC\Release\SDL2.dll","VisualC\Release\SDL2.lib","VisualC\Release\SDL2.pdb" -Destination "artifacts\x86"
        Copy-Item "VisualC\Release\SDL2.dll","VisualC\x64\Release\SDL2.lib","VisualC\x64\Release\SDL2.pdb" -Destination "artifacts\x64"
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: sdl2-win-${{ matrix.platform.id }}
        path: artifacts/
        retention-days: ${{ (github.event_name == 'pull_request' || github.ref_name != 'master') && 7 || 90 }}

